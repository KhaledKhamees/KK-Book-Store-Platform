// <auto-generated />
using MVCProject2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCProject2.Migrations
{
    [DbContext(typeof(ApplecationDBContext))]
    [Migration("20240930085635_AddImageUrlToProductTablw")]
    partial class AddImageUrlToProductTablw
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCProject2.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Drama"
                        });
                });

            modelBuilder.Entity("MVCProject2.Models.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "William Shakespeare",
                            CategoryId = 1,
                            Description = "A Shakespearean drama about revenge and tragedy.",
                            ISBN = "1111111111",
                            ImageUrl = "",
                            ListPrice = 29.989999999999998,
                            Name = "The Tragedy of Hamlet",
                            Price = 25.989999999999998,
                            Price100 = 20.989999999999998,
                            Price50 = 23.989999999999998
                        },
                        new
                        {
                            Id = 2,
                            Author = "Sun Tzu",
                            CategoryId = 1,
                            Description = "An ancient Chinese military treatise attributed to Sun Tzu.",
                            ISBN = "2222222222",
                            ImageUrl = "",
                            ListPrice = 19.989999999999998,
                            Name = "The Art of War",
                            Price = 17.989999999999998,
                            Price100 = 12.99,
                            Price50 = 15.99
                        },
                        new
                        {
                            Id = 3,
                            Author = "Stephen Hawking",
                            CategoryId = 1,
                            Description = "An exploration of cosmology and the universe.",
                            ISBN = "3333333333",
                            ImageUrl = "",
                            ListPrice = 35.990000000000002,
                            Name = "A Brief History of Time",
                            Price = 32.990000000000002,
                            Price100 = 28.989999999999998,
                            Price50 = 30.989999999999998
                        },
                        new
                        {
                            Id = 4,
                            Author = "George Orwell",
                            CategoryId = 1,
                            Description = "A dystopian science fiction novel about a totalitarian regime.",
                            ISBN = "4444444444",
                            ImageUrl = "",
                            ListPrice = 24.989999999999998,
                            Name = "1984",
                            Price = 22.989999999999998,
                            Price100 = 18.989999999999998,
                            Price50 = 20.989999999999998
                        },
                        new
                        {
                            Id = 5,
                            Author = "John Romer",
                            CategoryId = 1,
                            Description = "A deep dive into the civilization of ancient Egypt.",
                            ISBN = "5555555555",
                            ImageUrl = "",
                            ListPrice = 40.990000000000002,
                            Name = "The History of Ancient Egypt",
                            Price = 37.990000000000002,
                            Price100 = 32.990000000000002,
                            Price50 = 35.990000000000002
                        },
                        new
                        {
                            Id = 6,
                            Author = "E. H. Gombrich",
                            CategoryId = 1,
                            Description = "A renowned book that traces the history of visual arts.",
                            ISBN = "6666666666",
                            ImageUrl = "",
                            ListPrice = 45.990000000000002,
                            Name = "The Story of Art",
                            Price = 42.990000000000002,
                            Price100 = 36.990000000000002,
                            Price50 = 39.990000000000002
                        });
                });

            modelBuilder.Entity("MVCProject2.Models.Models.Product", b =>
                {
                    b.HasOne("MVCProject2.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MVCProject2.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
